
/**
 * @fileoverview Template to compose HTTP reqeuest.
 * 
 */

const url = `https://api-access.pangolin-sdk-toutiao.com/api/ad/union/sdk/reward_video/reward/`;
const method = `POST`;
const headers = {
'Accept' : `*/*`,
'Accept-Encoding' : `gzip, deflate, br`,
'Connection' : `keep-alive`,
'Content-Type' : `application/json`,
'Host' : `api-access.pangolin-sdk-toutiao.com`,
'User-Agent' : `Mozilla/5.0 (iPhone; CPU iPhone OS 13_4_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148`,
'Accept-Language' : `zh-Hans-CN;q=1, en-US;q=0.9`
};
const body = `{
  "message": "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",
  "cypher": 2
}`;

const myRequest = {
    url: url,
    method: method,
    headers: headers,
    body: body
};

$task.fetch(myRequest).then(response => {
    console.log(response.statusCode + "\n\n" + response.body);
    $done();
}, reason => {
    console.log(reason.error);
    $done();
});
